apiVersion: kubeflow.org/v1
kind: TFJob
metadata:
  name: rasa-tfjob
  namespace: tenant-7654b5-pilot
spec:
  tfReplicaSpecs:
    PS:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata:
          labels:
            app: shopify-trainer
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          imagePullSecrets:
            - name: docker-secret
          containers:
            - name: datafetch
              image: python:3.10
              command: ["/bin/sh", "-c"]
              args:
              #  - /usr/bin/git clone https://github.com/Exarta/tfjob-zeniva.git
               - pwd && wget https://github.com/Exarta/tfjob-zeniva/raw/master/data.json   # && cp -r /en_core_web_lg /app/tfjob-zeniva/
              # - /usr/bin/git
              # - clone
              # - https://github.com/Exarta/tfjob-zeniva.git

              imagePullPolicy: Always
              ports:
                - containerPort: 5005
                  name: tfjob-port
              resources:
                limits:
                  cpu: 1
                  memory: 1Gi
              volumeMounts:
                - name: rasa-data
                  mountPath: /app
              workingDir: /app
          volumes:
            - name: rasa-data
              persistentVolumeClaim:
                claimName: rasa-data

    Worker:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          imagePullSecrets:
            - name: docker-secret
          containers:
            - name: tensorflow
              image: exartadev/zeniva.exarta:tfjobgputest18
              command: ["/bin/sh", "-c"]
              args:
                - pwd && cd / && ls && python test.py
                # - python
                # - test.py
              ports:
                - containerPort: 5005
                  name: tfjob-port
              resources:
                limits:
                  cpu: 4
                  memory: 16Gi
                  nvidia.com/gpu: 1 
              volumeMounts:
                - name: rasa-data
                  mountPath: /app
              workingDir: /app
          volumes:
            - name: rasa-data
              persistentVolumeClaim:
                claimName: rasa-data
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: gpu.nvidia.com/class
                    operator: In
                    values:
                    - A100_PCIE_40GB

# cp -r /en_core_web_lg /app/       exartadev/zeniva.exarta:tfjobgputest13 (working container)
